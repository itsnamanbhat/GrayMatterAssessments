package com.graymatter.controller;

import java.sql.Date;
import java.time.LocalDate;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.graymatter.dao.CustomerDao;
import com.graymatter.dao.OrdersDao;
import com.graymatter.model.Customer;
import com.graymatter.model.Orders;
import com.graymatter.service.CustomerService;
import com.graymatter.service.OrderService;

@Controller
public class AdminController {

	@Autowired
	CustomerService cService;
	
	@Autowired
	OrderService oService;
	
	@RequestMapping("/loginAdmin")
	public String asAdmin() {
		return "adminLogin";
	}
	
	@RequestMapping("/aLogin")
		public ModelAndView loginWord(@RequestParam String email,@RequestParam String pwd) {
			 ModelAndView mv= null;
			 if(email.equals("admin@gmail.com") && pwd.equals("admin123")) {
				mv= new ModelAndView("AdminHome");
			 }else {
				 mv=new ModelAndView("adminLogin");
			 }
			 return mv;
		}
	
	@RequestMapping("/goToCustomer")
	public String goToCustomer() {
		return "adminCust";
	}
	
	@RequestMapping("/goToOrder")
	public String goToOrder() {
		return "adminOrd";
	}
	
	@RequestMapping("/addOrd")
	public ModelAndView addMyOrder() {
		ModelAndView mv= new ModelAndView("manageAdOrder");
		mv.addObject("type","add");
		return mv;
			
	}
	@RequestMapping("/deleteOrd")
	public ModelAndView deleteMyOrder(HttpSession session) {
		List<Orders> oList= oService.getAllOrders();
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","delete");
	 mv.addObject("orders",oList);
	 System.out.println(oList);
	 return mv;
	}
	@RequestMapping("/updateOrd")
	public ModelAndView updateMyOrder() {
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","update");
	 return mv;
	}
	
	@RequestMapping("/getOrd")
	public ModelAndView goTogetMyOrder() {
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","get");
	 return mv;
	}
	
	@RequestMapping("/getAllOrd")
	public ModelAndView geAllMyOrder() {
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","getAll");
	 List<Orders> olist=oService.getAllOrders();
	 mv.addObject("orders",olist);
	 return mv;
	}
	
	@RequestMapping ("/addThis")
	public ModelAndView addOrder(@RequestParam String orderId,@RequestParam String totalAmount,@RequestParam String customerId ) {
		LocalDate localDate = LocalDate.now();
        Date sqlDate = Date.valueOf(localDate);
		ModelAndView mv= new ModelAndView("adminOrd");
		oService.addOrder(new Orders(Integer.parseInt(orderId),sqlDate,Double.parseDouble(totalAmount),Integer.parseInt(customerId)));
		return mv;
		
	}
	
	@RequestMapping("/deleteThis")
	public ModelAndView deleteMyOrder(@RequestParam String orderId) {
		ModelAndView mv= new ModelAndView("adminOrd");
		oService.deleteOrder(Integer.parseInt(orderId));
		return mv;
	}
	
	@RequestMapping("/updateThis")
	public ModelAndView updateMyOrder(@RequestParam String orderId,@RequestParam String totalAmount,@RequestParam String customerId ) {
		ModelAndView mv= new ModelAndView("adminOrd");
		LocalDate localDate = LocalDate.now();
        Date sqlDate = Date.valueOf(localDate);
        oService.updateOrder(new Orders(Integer.parseInt(orderId),sqlDate,Double.parseDouble(totalAmount),Integer.parseInt(customerId)));
        return mv;
	}
	@RequestMapping("/getThis")
	public ModelAndView getMyOrder(@RequestParam String orderId) {
	ModelAndView mv= new ModelAndView("manageAdOrder");
	 Orders o= oService.getByOrderId(Integer.parseInt(orderId));
	 mv.addObject("order",o);
	 return mv;
	}
	
	
	// managing customers
	

	@RequestMapping("/addOne")
	public ModelAndView addMyCusotmer() {
		ModelAndView mv= new ModelAndView("manageAdOrder");
		mv.addObject("type","add");
		return mv;
			
	}
	@RequestMapping("/deleteOne")
	public ModelAndView deleteCustomer(HttpSession session) {
		List<Customer> cList= cService.getAllCustomers();
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","delete");
	 mv.addObject("orders",cList);
	 System.out.println(cList);
	 return mv;
	}
	@RequestMapping("/updateOne")
	public ModelAndView updateCustomer() {
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","update");
	 return mv;
	}
	
	@RequestMapping("/getOne")
	public ModelAndView goTogetMyCustomer() {
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","get");
	 return mv;
	}
	
	@RequestMapping("/getAllCust")
	public ModelAndView geAllMyCustomer() {
	 ModelAndView mv= new ModelAndView("manageAdOrder");
	 mv.addObject("type","getAll");
	 List<Orders> olist=oService.getAllOrders();
	 mv.addObject("orders",olist);
	 return mv;
	}
	
}
